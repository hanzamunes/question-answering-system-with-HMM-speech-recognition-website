
<!DOCTYPE html>
<!--[if IE 8]> <html lang="en" class="ie8"> <![endif]-->  
<!--[if IE 9]> <html lang="en" class="ie9"> <![endif]-->  
<!--[if !IE]><!--> <html lang="en"> <!--<![endif]-->  
<head>
    <title>Question Answering System with HMM Speech Recognition</title>
    <!-- Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Question Answering System with HMM Speech Recognition">
    <meta name="author" content="Hobert">    
    <link rel="shortcut icon" href="favicon.ico">  
    <link rel="icon" href="./favicon.ico">
    <meta property="og:image" content="assets/images/web-logo.jpg">
    <meta property="og:image:type" content="image/png">
    <meta property="og:image:width" content="1024">
    <meta property="og:image:height" content="1024">
    <meta property=”og:description” content=”Hobert Website” />
    <meta name=”twitter:title” content=”Hobert website” />
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,500,400italic,300italic,300,500italic,700,700italic,900,900italic' rel='stylesheet' type='text/css'>
    <!-- Global CSS -->
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="assets/plugins/bootstrap/css/bootstrap.min.css">

    <!-- Optional theme -->
    <link rel="stylesheet" href="assets/plugins/bootstrap/css/bootstrap-theme.min.css">
    <!-- Plugins CSS -->
    <link rel="stylesheet" href="assets/plugins/font-awesome/css/font-awesome.css">
    
    <!-- Theme CSS -->  
    <link id="theme-style" rel="stylesheet" href="assets/css/styles.css">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <!-- Angular.JS -->
</head> 

<body>
    
    <header class="header">
        <div class="page-nav-space-holder hidden-xs">
            <div id="page-nav-wrapper" class="page-nav-wrapper text-center">
                <div class="container">
                    <ul id="page-nav" class="nav page-nav list-inline">
                        <li><a href="/">Home</a></li>
                        <li class="active"><a  href="/sound">Suara</a></li>
                        <li><a  href="/text">Text</a></li>
                        <li><a  href="/sound-text">Sound and Text</a></li>
                    </ul><!--//page-nav-->
                </div>
            </div><!--//page-nav-wrapper-->
        </div>
        
        
    </header><!--//header-->
    

     <div class="wrapper container">
        

        <section id="kampretan-section" class="kampretan-section section">
            <h2 class="section-title">Sound to Text</h2>
            <div class="record sound text-center">
                    <p>Record Sound here</p>
                    <!--<div class="player text-center" ng-app="soundApp" ng-controller="soundCtrl">
                        <ng-audio-recorder id="mainAudio" audio-model="recorded" show-player="false" time-limit="timeLimit">
                        <div ng-if="recorder.isAvailable">
                            <button type="button" id="button_stop" class="btn {{recorder.status.isRecording? 'btn-success' : 'btn-danger' }}" ng-click=" recorder.status.isRecording? recorder.stopRecord() : recorder.startRecord()" >
                              <i class="{{ recorder.status.isRecording? 'fa fa-stop' : 'fa fa-microphone' }}"></i>
                            </button>

                            <!-- <button type="button" id="button_play" class="btn {{greenPlayer}}" ng-disabled="cantPlayed" ng-click="playFunction()"> -->
                              <!-- <i class="{{player}}"></i> -->
                            <!-- </button> -->
                            <!-- <p>State: {{state}}</p>    
                        </div>
                        
                        </ng-audio-recorder>
                        
                    </div>-->
                    <div class="player text-center">
                        <button onclick="startRecording(this);">record</button>
                        <button onclick="stopRecording(this);" disabled>stop</button>
                    </div>
                    <div>
                        <h2>Recordings</h2>
                        <ul id="recordingslist"></ul>
                    </div>
                    <div>
                        <h2>Log</h2>
                        <pre id="log"></pre>
                    </div>


                    <h4 align="left">Text:</h4>
                    <div class="item active">
                        <blockquote class="quote">
                            <p>Lorem ipsum dolor sit amet, autem honestatis ad ius, mei omnis laboramus cu. Et solum perfecto vituperatoribus per. Vis iracundia elaboraret definitionem ut. Sea modo choro euismod et, purto errem saperet et usu. Mea iudico explicari te. At sea soluta albucius, usu ea gubergren persecuti, eu sonet graecis salutatus mel.</p>
                        </blockquote>
                    </div>

            </div>
            <div>
                
            </div>
        </section><!--//section-->
        
        
    </div><!--//wrapper-->
    
    <footer class="footer text-center">
        <div class="container">
            <small class="copyright">Template Copyright @ <a href="http://themes.3rdwavemedia.com/" target="_blank">3rd Wave Media</a> | Edited by: <a href="http://leopisang.net/" target="_blank">Leonardo Cahaya</a> </small>
        </div><!--//container-->
    </footer>
    
    
    <!-- Javascript -->          
    <script type="text/javascript" src="assets/plugins/jquery-1.12.4.min.js"></script>
    <script type="text/javascript" src="assets/plugins/bootstrap/js/bootstrap.min.js"></script>   
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/wavesurfer.js/1.0.52/wavesurfer.min.js"></script>
    <script src="assets/dist/angular-audio-recorder.min.js"></script>
    <script type="text/javascript" src="javascripts/recorder.js"></script>
    <!-- Angular.JS -->
    <script type="text/javascript" src="assets/plugins/easy-pie-chart/dist/jquery.easypiechart.min.js"></script>
    <script type="text/javascript" src="assets/plugins/imagesloaded.pkgd.min.js"></script> 
    <script type="text/javascript" src="assets/plugins/isotope.pkgd.min.js"></script>  

    <!-- custom js -->
    <script type="text/javascript" src="assets/js/main.js"></script>
    <script type="text/javascript">
        var state = 'stop';
        var app = angular.module('soundApp', ['angularAudioRecorder']);
        app.config(function (recorderServiceProvider) {
    recorderServiceProvider
      .forceSwf(false)
      //.setSwfUrl('/lib/recorder.swf')
      .withMp3Conversion(true)
    ;
  });
        app.controller('soundCtrl', function($scope, $timeout) {
            console.log("Loaded");
            $scope.timeLimit = 10;
           
        });
    </script>

    <script type="text/javascript">
        function __log(e, data) {
    log.innerHTML += "\n" + e + " " + (data || '');
  }
  var audio_context;
  var recorder;
  function startUserMedia(stream) {
    var input = audio_context.createMediaStreamSource(stream);
    __log('Media stream created.');
    // Uncomment if you want the audio to feedback directly
    //input.connect(audio_context.destination);
    //__log('Input connected to audio context destination.');
    
    recorder = new Recorder(input,{numChannels:1,sampleRate:16000});
    __log('Recorder initialised.');
  }
  function startRecording(button) {
    recorder && recorder.record();
    button.disabled = true;
    button.nextElementSibling.disabled = false;
    __log('Recording...');
  }
  function stopRecording(button) {
    recorder && recorder.stop();
    button.disabled = true;
    button.previousElementSibling.disabled = false;
    __log('Stopped recording.');
    
    // create WAV download link using audio data blob
    createDownloadLink();
    
    recorder.clear();
  }
  function createDownloadLink() {
    recorder && recorder.exportWAV(16000,function(blob) {
      var url = URL.createObjectURL(blob);
      var li = document.createElement('li');
      var au = document.createElement('audio');
      var hf = document.createElement('a');
      
      au.controls = true;
      au.src = url;
      hf.href = url;
      hf.download = new Date().toISOString() + '.wav';
      hf.innerHTML = hf.download;
      li.appendChild(au);
      li.appendChild(hf);
      recordingslist.appendChild(li);
    });
  }
  window.onload = function init() {
    try {
      // webkit shim
      window.AudioContext = window.AudioContext || window.webkitAudioContext;
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
      window.URL = window.URL || window.webkitURL;
      
      audio_context = new AudioContext;
      __log('Audio context set up.');
      __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
    } catch (e) {
      alert('No web audio support in this browser!');
    }
    
    navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
      __log('No live audio input: ' + e);
    });
  };
    </script>
</body>
</html> 

