
<!DOCTYPE html>
<!--[if IE 8]> <html lang="en" class="ie8"> <![endif]-->  
<!--[if IE 9]> <html lang="en" class="ie9"> <![endif]-->  
<!--[if !IE]><!--> <html lang="en"> <!--<![endif]-->  
<head>
    <title>Question Answering System with HMM Speech Recognition</title>
    <!-- Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Question Answering System with HMM Speech Recognition">
    <meta name="author" content="Hobert">    
    <link rel="shortcut icon" href="favicon.ico">  
    <link rel="icon" href="./favicon.ico">
    <meta property="og:image" content="assets/images/web-logo.jpg">
    <meta property="og:image:type" content="image/png">
    <meta property="og:image:width" content="1024">
    <meta property="og:image:height" content="1024">
    <meta property=”og:description” content=”Hobert Website” />
    <meta name=”twitter:title” content=”Hobert website” />
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,500,400italic,300italic,300,500italic,700,700italic,900,900italic' rel='stylesheet' type='text/css'>
    <!-- Global CSS -->
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="assets/plugins/bootstrap/css/bootstrap.min.css">

    <!-- Optional theme -->
    <link rel="stylesheet" href="assets/plugins/bootstrap/css/bootstrap-theme.min.css">
    <!-- Plugins CSS -->
    <link rel="stylesheet" href="assets/plugins/font-awesome/css/font-awesome.css">
    
    <!-- Theme CSS -->  
    <link id="theme-style" rel="stylesheet" href="assets/css/styles.css">

    <style>
  * {
    font-family: Verdana, Arial, sans-serif;
  }
  a:link {
    color:#000;
    text-decoration: none;
  }
  a:visited {
    color:#000;
  }
  a:hover {
    color:#33F;
  }
  .button {
    background: -webkit-linear-gradient(top,#008dfd 0,#0370ea 100%);
    border: 1px solid #076bd2;
    border-radius: 3px;
    color: #fff;
    display: none;
    font-size: 13px;
    font-weight: bold;
    line-height: 1.3;
    padding: 8px 25px;
    text-align: center;
    text-shadow: 1px 1px 1px #076bd2;
    letter-spacing: normal;
  }
  .center {
    padding: 10px;
    text-align: center;
  }
  .final {
    color: black;
    padding-right: 3px; 
  }
  .interim {
    color: gray;
  }
  .info {
    font-size: 14px;
    text-align: center;
    color: #777;
    display: none;
  }
  .right {
    float: right;
  }
  .sidebyside {
    display: inline-block;
    width: 45%;
    min-height: 40px;
    text-align: left;
    vertical-align: top;
  }
  #headline {
    font-size: 40px;
    font-weight: 300;
  }
  #info {
    font-size: 20px;
    text-align: center;
    color: #777;
    visibility: hidden;
  }
  #results {
    font-size: 14px;
    font-weight: bold;
    border: 1px solid #ddd;
    padding: 15px;
    text-align: left;
    min-height: 150px;
  }
  #start_button {
    border: 0;
    background-color:transparent;
    padding: 0;
  }
</style>


    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <!-- Angular.JS -->
    <script type="text/javascript" src="assets/plugins/jquery-1.12.4.min.js"></script>

    <script src="/javascripts/MediaStreamRecorder.js"></script>

    <!-- for Edige/FF/Chrome/Opera/etc. getUserMedia support -->
    <script src="https://cdn.WebRTC-Experiment.com/gumadapter.js"></script>
</head> 

<body>
    
    <header class="header">
        <div class="page-nav-space-holder hidden-xs">
            <div id="page-nav-wrapper" class="page-nav-wrapper text-center">
                <div class="container">
                    <ul id="page-nav" class="nav page-nav list-inline">
                        <li><a href="/">Home</a></li>
                        <li><a  href="/sound">Suara</a></li>
                        <li><a  href="/text">Text</a></li>
                        <li><a  href="/sound-text">Sound and Text</a></li>
                        <li class="active"><a  href="/sound-text-chrome">Sound and Text (Chrome API)</a></li>
                    </ul><!--//page-nav-->
                </div>
            </div><!--//page-nav-wrapper-->
        </div>
        
        
    </header><!--//header-->
    

     <div class="wrapper container">
        

        <section id="kampretan-section" class="kampretan-section section">
            <h2 class="section-title">Sound to Text</h2>
            <div class="record sound" ng-app="soundApp" ng-controller="soundCtrl" >
                    
                    <div id="info" style="visibility : visible;">
                      <p id="info_start" style="display:inline;">Click on the microphone icon and begin speaking.</p>
                      <p id="info_speak_now" style="display:none">Speak now.</p>
                      <p id="info_no_speech" style="display:none">No speech was detected. You may need to adjust your
                        <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
                          microphone settings</a>.</p>
                      <p id="info_no_microphone" style="display:none">
                        No microphone was found. Ensure that a microphone is installed and that
                        <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
                        microphone settings</a> are configured correctly.</p>
                      <p id="info_allow" style="display:none">Click the "Allow" button above to enable your microphone.</p>
                      <p id="info_denied" style="display:none">Permission to use microphone was denied.</p>
                      <p id="info_blocked" style="display:none">Permission to use microphone is blocked. To change,
                        go to chrome://settings/contentExceptions#media-stream</p>
                      <p id="info_upgrade" style="display:none">Web Speech API is not supported by this browser.
                         Upgrade to <a href="//www.google.com/chrome">Chrome</a>
                         version 25 or later.</p>
                    </div>
                    <div class="right">
                      <button id="start_button" onclick="startButton(event)">
                        <img id="start_img" src="images/mic.gif" alt="Start"></button>
                    </div>
                    <div id="results">
                      <span id="final_span" class="final" ng-model="question"></span>
                      <span id="interim_span" class="interim"></span>
                      <p>
                    </div>
                    <br>
                    <br>
                    <div class="player text-center" >
                        
                        <button class="btn btn-primary" id="submitQuery">Get Answer</button>
                        <h4 align="left">Output Text:</h4>
                        <div class="item active" id="output-text">
                        <div id="loadingImage">
                        </div>
                            <blockquote class="quote">
                                <h3 id="jawaban"></h3>
                            </blockquote>
                        </div>
                    </div>
                    <div class="col-md-6col-md-offset-3" id="grow-box" >
                        <div class="relevant-list" ng-hide="showR">
                            <h4 id='title'></h4>
                            <p id = 'dokumen'></p>
                        </div>
                        <br>
                        <div class="btnshow-frame text-center">
                            <button type="button" class="btn btn-link" ng-click="showRelevantFunction()"> <i class="fa fa-chevron-up" ng-hide="showR"></i><br ng-hide="showR">{{resultBtnText}} <br ng-hide="!showR"> <i class="fa fa-chevron-down" ng-hide="!showR"></i> </button>
                        </div>
                    </div>

            </div>
        </section><!--//section-->
        
        
    </div><!--//wrapper-->
    
    <footer class="footer text-center">
        <div class="container">
            <small class="copyright">Template Copyright @ <a href="http://themes.3rdwavemedia.com/" target="_blank">3rd Wave Media</a> | Edited by: <a href="http://leopisang.net/" target="_blank">Leonardo Cahaya</a> | Hobert Ho </small>
        </div><!--//container-->
    </footer>
    
    
    <!-- Javascript -->          
    <script type="text/javascript" src="assets/plugins/jquery-1.12.4.min.js"></script>
    <script type="text/javascript" src="assets/plugins/bootstrap/js/bootstrap.min.js"></script>   
    <script type="text/javascript" src="assets/plugins/easy-pie-chart/dist/jquery.easypiechart.min.js"></script>
    <script type="text/javascript" src="assets/plugins/imagesloaded.pkgd.min.js"></script> 
    <script type="text/javascript" src="assets/plugins/isotope.pkgd.min.js"></script>  

    <!-- custom js -->
    <script type="text/javascript" src="assets/js/main.js"></script>
    <script type="text/javascript" src="https://www.google.com/intl/en/chrome/assets/common/js/chrome.min.js"></script>

    <script type="text/javascript">
        var state = 'stop';
        var app = angular.module('soundApp', []);
        app.controller('soundCtrl', function($scope) {
            $scope.player = 'fa fa-play';
            $scope.recorder = 'fa fa-microphone';
            $scope.greenRecord = 'btn-danger';
            $scope.greenPlayer = '';
            $scope.state = 'stopR';
            $scope.cantRecord = false;
            $scope.cantPlayed = true;

            $scope.showR = true;
                    $scope.resultBtnText = 'Show Relevant Document';
                    $scope.showRelevantFunction = function(){
                        $scope.showR = !$scope.showR;
                        if(!$scope.showR) {
                            $scope.resultBtnText = 'Hide Relevant Document';
                        } else {
                            $scope.resultBtnText = 'Show Relevant Document';
                        }
                    }


            $scope.recordFunction = function() {
                if($scope.state == 'playR'){
                        $scope.state = 'stopR';
                        $scope.recorder = 'fa fa-microphone';
                        $scope.greenRecord = 'btn-danger';
                        $scope.cantRecord = false;
                        $scope.cantPlayed = false;
                } else {
                    $scope.state = 'playR';
                    $scope.recorder = 'fa fa-stop';
                    $scope.cantPlayed = true;
                    $scope.greenRecord = 'btn-success';
                }
            }
            $scope.playFunction = function() {
                if($scope.state == 'playP'){
                    $scope.player = 'fa fa-play';
                    $scope.cantRecord = false;
                    $scope.greenPlayer = '';
                    $scope.state = 'stopP';
                } else {
                    $scope.state = 'playP';
                    $scope.cantRecord = true;
                    $scope.player = 'fa fa-stop';
                    $scope.greenPlayer = 'btn-success';
                }
            }
        });

    </script>

    <script>
        var create_email = false;
        var final_transcript = '';
        var recognizing = false;
        var ignore_onend;
        var start_timestamp;
        if (!('webkitSpeechRecognition' in window)) {
          upgrade();
        } else {
          start_button.style.display = 'inline-block';
          var recognition = new webkitSpeechRecognition();
          recognition.continuous = false;
          recognition.interimResults = true;

          recognition.onstart = function() {
            recognizing = true;
            showInfo('info_speak_now');
            start_img.src = 'images/mic-animate.gif';
          };

          recognition.onerror = function(event) {
            if (event.error == 'no-speech') {
              start_img.src = 'images/mic.gif';
              showInfo('info_no_speech');
              ignore_onend = true;
            }
            if (event.error == 'audio-capture') {
              start_img.src = 'images/mic.gif';
              showInfo('info_no_microphone');
              ignore_onend = true;
            }
            if (event.error == 'not-allowed') {
              if (event.timeStamp - start_timestamp < 100) {
                showInfo('info_blocked');
              } else {
                showInfo('info_denied');
              }
              ignore_onend = true;
            }
          };

          recognition.onend = function() {
            recognizing = false;
            if (ignore_onend) {
              return;
            }
            start_img.src = 'images/mic.gif';
            if (!final_transcript) {
              showInfo('info_start');
              return;
            }
            showInfo('');
            if (window.getSelection) {
              window.getSelection().removeAllRanges();
              var range = document.createRange();
              range.selectNode(document.getElementById('final_span'));
              window.getSelection().addRange(range);
            }
            if (create_email) {
              create_email = false;
              createEmail();
            }
          };

          recognition.onresult = function(event) {
            var interim_transcript = '';
            for (var i = event.resultIndex; i < event.results.length; ++i) {
              if (event.results[i].isFinal) {
                final_transcript += event.results[i][0].transcript;
              } else {
                interim_transcript += event.results[i][0].transcript;
              }
            }
            final_transcript = capitalize(final_transcript);
            final_span.innerHTML = linebreak(final_transcript);
            interim_span.innerHTML = linebreak(interim_transcript);
            if (final_transcript || interim_transcript) {
              showButtons('inline-block');
            }
          };
        }

        function upgrade() {
          start_button.style.visibility = 'hidden';
          showInfo('info_upgrade');
        }

        var two_line = /\n\n/g;
        var one_line = /\n/g;
        function linebreak(s) {
          return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
        }

        var first_char = /\S/;
        function capitalize(s) {
          return s.replace(first_char, function(m) { return m.toUpperCase(); });
        }

        function createEmail() {
          var n = final_transcript.indexOf('\n');
          if (n < 0 || n >= 80) {
            n = 40 + final_transcript.substring(40).indexOf(' ');
          }
          var subject = encodeURI(final_transcript.substring(0, n));
          var body = encodeURI(final_transcript.substring(n + 1));
          window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
        }

        function copyButton() {
          if (recognizing) {
            recognizing = false;
            recognition.stop();
          }
          //copy_button.style.display = 'none';
          //copy_info.style.display = 'inline-block';
          showInfo('');
        }

        function emailButton() {
          if (recognizing) {
            create_email = true;
            recognizing = false;
            recognition.stop();
          } else {
            createEmail();
          }
          email_button.style.display = 'none';
          email_info.style.display = 'inline-block';
          showInfo('');
        }

        function startButton(event) {
          if (recognizing) {
            recognition.stop();
            return;
          }
          final_transcript = '';
          recognition.lang = 'id-ID';
          recognition.start();
          ignore_onend = false;
          final_span.innerHTML = '';
          interim_span.innerHTML = '';
          start_img.src = 'images/mic-slash.gif';
          showInfo('info_allow');
          showButtons('none');
          start_timestamp = event.timeStamp;
        }

        function showInfo(s) {
          if (s) {
            for (var child = info.firstChild; child; child = child.nextSibling) {
              if (child.style) {
                child.style.display = child.id == s ? 'inline' : 'none';
              }
            }
            info.style.visibility = 'visible';
          } else {
            info.style.visibility = 'hidden';
          }
        }

        var current_style;
        function showButtons(style) {
          if (style == current_style) {
            return;
          }
          current_style = style;
          //copy_button.style.display = style;
          //email_button.style.display = style;
          //copy_info.style.display = 'none';
          //email_info.style.display = 'none';
        }
    </script>

    <script>
    $(document).ready(function(){
        $('#submitQuery').click(function(){
            var questionText = $("#final_span").text();
            $.ajax({
                method:'POST',
                url:'/getAnswerAJAX',
                data: {'question':questionText},
                beforeSend: function(){
                    $('#submitQuery').attr("disabled",true);
                    $("#loadingImage").html("<img src='images/loading.gif' max-width='80px' max-height='60px'>");
                }
            }).done(function(response){
                $('#loadingImage').html('');
                $('#submitQuery').attr('disabled',false);
                var jawaban = document.getElementById('jawaban');
                var title = document.getElementById('title');
                var dokumen = document.getElementById('dokumen');
                if (response.jawaban =='undefined')
                {
                    response.jawaban = "NO ANSWER";
                }
                if (response.titleDoc =='undefined')
                {
                    response.titleDoc = 'not available';
                }
                if (response.content =='undefined')
                {
                    response.content = 'not available';
                }
                jawaban.innerHTML = response.jawaban;
                title.innerHTML = response.titleDoc;
                dokumen.innerHTML = response.content;
            });  
        });
    });
    
    </script>
</body>
</html> 

